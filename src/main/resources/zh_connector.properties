#########  oracle
oracle.database.server.name.displayName=名称标识
oracle.database.server.name.description=唯一名称标识数据库服务器和所有记录的偏移，并且用作所有模式和主题的前缀。每个不同的安装都应具有单独的命名空间，并在最多的一个debezium连接器上监控。
oracle.database.dbname.displayName=数据库
oracle.database.dbname.description=连接器应捕获更改的数据库的名称
oracle.database.url.displayName=完整的JDBC URL.
oracle.database.url.description=完成JDBC URL作为指定主机名，端口和数据库的替代方法，作为支持备用连接方案的方法。
oracle.database.pdb.name.displayName=PDB名称
oracle.database.pdb.name.description=使用多租户设置时可插拔数据库的名称。在这种情况下，必须通过database.dbname给出CDB名称。
oracle.database.connection.adapter.displayName=连接器适配器
oracle.database.connection.adapter.description=在捕获数据库的更改时要使用适配器。选项包括：'logminer':(默认值）使用本机Oracle Logminer捕获更改;“xstream”以使用Oracle XStream捕获更改
oracle.database.history.kafka.bootstrap.servers.displayName=Kafka broker地址
oracle.database.history.kafka.bootstrap.servers.description=连接器的主机/端口对列表用于建立与Kafka集群的初始连接，以检索先前由连接器存储的数据库模式历史记录。这应该指向Kafka Connect过程使用的相同Kafka集群。
oracle.database.history.kafka.topic.displayName=数据库历史主题名称
oracle.database.history.kafka.topic.description=数据库架构历史记录的主题的名称
oracle.schema.include.list.displayName=包括模式
oracle.schema.include.list.description=schema.include.list.
oracle.schema.exclude.list.displayName=排除模式
oracle.schema.exclude.list.description=schema.exclude.list.
oracle.table.include.list.displayName=包括表格
oracle.table.include.list.description=要捕获更改的表
oracle.table.exclude.list.displayName=排除表格
oracle.table.exclude.list.description=逗号分隔的正则表达式列表，与要排除在监控之外的完全限定的表格名称
oracle.column.include.list.displayName=包括列
oracle.column.include.list.description=匹配列的正则表达式包含在更改事件中
oracle.column.exclude.list.displayName=排除列
oracle.column.exclude.list.description=正则表达式匹配列以从更改事件中排除
oracle.snapshot.mode.displayName=快照模式
oracle.snapshot.mode.description=取数模式
oracle.snapshot.locking.mode.displayName=全局读锁长度
oracle.snapshot.locking.mode.description=默认为minimal最小
oracle.snapshot.include.collection.list.displayName=快照模式包括数据收集
oracle.snapshot.include.collection.list.description=必须设置此设置以指定要在创建或重新启动连接器时必须采取的表/集合列表。
oracle.snapshot.fetch.size.displayName=快照获取大小
oracle.snapshot.fetch.size.description=在执行快照时应加载到内存中的最大记录数
oracle.snapshot.delay.ms.displayName=快照延迟（毫秒）
oracle.snapshot.delay.ms.description=默认为0毫秒
oracle.snapshot.lock.timeout.ms.displayName=快照锁定超时（MS）
oracle.snapshot.lock.timeout.ms.description=在快照开头时要等待表锁的最大数量。如果在此时间框架中无法获取锁，则将中止快照。默认为10秒钟
oracle.snapshot.select.statement.overrides.displayName=应覆盖快照期间使用的默认选择语句的表列表。
oracle.snapshot.select.statement.overrides.description=此属性包含逗号分隔的完全限定表（db_name.table_name）或（schema_name.table_name），具体取决于表示的连接器。选择各个表的语句是由ID'Snapshot.Select.statement.stative.stative.stative.stative.statement.statement.stative.stative.stative.stative.stative.stative.stative.stative.stative.stative.statement. [db_name]'或'snapshot.select.statement.overrides。[schema_name]。[table_name]'分别。这些属性的值是在快照期间从特定表中检索数据时要使用的SELECT语句。仅用于大附加表的可能使用情况正在设置一个特定点，在其中开始（恢复）快照，以防先前的快照被中断。
oracle.log.mining.strategy.displayName=日志采矿策略
oracle.log.mining.strategy.description=有策略：在线目录，挖掘更快，但没有捕获的DDL。另一个 - 使用数据字典加载到重做日志文件中
oracle.log.mining.batch.size.min.displayName=读取重做/存档日志的最小批量大小。
oracle.log.mining.batch.size.min.description=此连接器将尝试从重做/存档日志读取的最小SCN间隔大小。在需要时，在需要调谐连接器吞吐量的情况下，有效批量大小也将增加/减少。
oracle.log.mining.batch.size.max.displayName=读取重做/存档日志的最大批量大小。
oracle.log.mining.batch.size.max.description=从重做/存档日志读取时，此连接器将使用此连接器的最大SCN间隔大小。
oracle.log.mining.batch.size.default.displayName=默认批量读取重做/存档日志的大小。
oracle.log.mining.batch.size.default.description=连接器将用于从重做/存档日志读取数据的启动SCN间隔大小。
oracle.log.mining.sleep.time.min.ms.displayName=阅读重做/存档日志时，最小睡眠时间为毫秒。
oracle.log.mining.sleep.time.min.ms.description=在从重做/存档日志读取数据后，连接器将睡眠的最小时间量，然后再次启动读取数据。价值为毫秒。
oracle.log.mining.sleep.time.max.ms.displayName=阅读重做/存档日志时，最大睡眠时间为毫秒。
oracle.log.mining.sleep.time.max.ms.description=在从重做/存档日志中读取数据后，连接器将睡眠的最大时间量，然后再次启动读取数据。价值为毫秒。
oracle.log.mining.sleep.time.default.ms.displayName=读取重做/存档日志时默认睡眠时间为毫秒。
oracle.log.mining.sleep.time.default.ms.description=在从重做/存档日志中读取数据后，连接器将睡眠的时间量，然后再次启动读取数据。价值为毫秒。
oracle.log.mining.sleep.time.increment.ms.displayName=睡眠时间的增量以毫秒为单位用于调整自动睡眠行为。
oracle.log.mining.sleep.time.increment.ms.description=当从Logminer读取数据时，连接器将用于调整最佳睡眠时间的最大时间。价值为毫秒。
oracle.log.mining.archive.log.hours.displayName=日志挖掘存档日志数
oracle.log.mining.archive.log.hours.description=从sysdate到矿器存档日志的过去的小时数。使用0 mines所有可用的存档日志
oracle.log.mining.archive.log.only.mode.displayName=指定日志挖掘是否应该仅针对存档日志或档案和重做日志
oracle.log.mining.archive.log.only.mode.description=当设置为“假”时，默认值，连接器将挖掘两个存档日志和重做日志以发出更改事件。设置为“true`”时，连接器只会挖掘归档日志。由于频繁旋转重做日志，存在有利于仅挖掘档案日志并接受事件发射的延迟。
oracle.log.mining.archive.destination.name.displayName=用于读取存档日志的存档日志目标的名称
oracle.log.mining.archive.destination.name.description=将特定的存档日志目的目标设置为读取存档日志的源。当未设置时，连接器将自动选择第一个本地和有效目标。
oracle.log.mining.transaction.retention.hours.displayName=日志挖掘长期运行交易保留
oracle.log.mining.transaction.retention.hours.description=日志挖掘会话之间的事务缓冲区中的长时间运行的小时数。默认情况下，保留所有事务。
oracle.lob.enabled.displayName=指定连接器是否支持挖掘LOB字段和操作
oracle.lob.enabled.description=设置为“假”时，默认情况下，不会捕获LOB字段也不会被捕获。设置为“TRUE”时，连接器将捕获LOB字段，并为任何其他列类型的这些字段发出更改。
oracle.tombstones.on.delete.displayName=是否删除事件信息
oracle.tombstones.on.delete.description=删除操作是否应由删除事件和子查询到事件（true）表示或仅由删除事件（false）表示。发出墓碑事件（默认行为）允许Kafka完全删除源记录删除后删除与给定键相关的所有事件。
oracle.decimal.handling.mode.displayName=Decimal精度控制模式
oracle.decimal.handling.mode.description=精度
oracle.time.precision.mode.displayName=时间戳
oracle.time.precision.mode.description=时间，日期和时间戳可以用不同类型的精度表示，包括：'自适应'（默认值）基于数据库列的精度上的时间，日期和时间戳值的精度;'Adaptive_time_microseconds'类似于'Adaptive'模式，但时间字段始终使用微秒精度;“连接”始终表示使用Kafka Connect的内置表示的时间，日期和时间戳值，这些时间表，日期和时间戳，无论如何使用毫秒精度使用毫秒精度数据库列的精度。
oracle.heartbeat.interval.ms.displayName=连接器心跳间隔（毫秒）
oracle.heartbeat.interval.ms.description=默认为0禁用
oracle.heartbeat.topics.prefix.displayName=心跳命名前缀
oracle.heartbeat.topics.prefix.description=默认为__debezium-heartbeat
oracle.converters.displayName=转换器配置
oracle.converters.description=可选的自定义转换器列表，而不是默认的转换器。转换器使用“<converter.prefix> .type”配置选项定义，并使用选项'<converter.prefix>。<选项>'配置。
oracle.column.truncate.to.(d+).chars.displayName=截断列到n个字符
oracle.column.truncate.to.(d+).chars.description=将符合应截断的列的完全限定列名称的逗号分隔的正则表达式列表。
oracle.column.mask.with.(d+).chars.displayName=掩码列与n个星号
oracle.column.mask.with.(d+).chars.description=逗号分隔的正则表达式列表，匹配应以配置的星号（'*'）字符的已配置量屏蔽的完全限定列的全文名称。
oracle.column.mask.hash.([^.]+).with.salt.(.+).displayName=哈希模型
oracle.column.mask.hash.([^.]+).with.salt.(.+).description=逗号分隔的正则表达式列表，匹配应通过散列输入屏蔽的完全限定列的全文名称。使用指定的哈希算法和盐。
oracle.datatype.propagate.source.type.displayName=通过数据类型传播源类型
oracle.datatype.propagate.source.type.description=逗号分隔的正则表达式列表，与特定于数据库的数据类型名称匹配，该名称将数据类型的原始类型和原始长度添加为发射的更改记录中的相应字段模式。
oracle.column.propagate.source.type.displayName=按列传播源类型
oracle.column.propagate.source.type.description=逗号分隔的正则表达式列表匹配完全限定的列名称，该列将列的原始类型和原始长度添加为发射的更改记录中的相应字段模式。
oracle.message.key.columns.displayName=列PK映射
oracle.message.key.columns.description=分号分隔的表达式列表，匹配完全限定的表和列用作消息键。每个表达式必须匹配模式'<完全限定表名称>：<key列>'，其中表名称可以定义为（db_name.table_name）或（schema_name.table_name），具体取决于特定的连接器和密钥列是表示自定义密钥的逗号分隔列列表。对于没有显式密钥配置的任何表，表的主键列将用作消息键.Example：dbserver1.inventory.OrderLines：OrderID，OrderLineId; dbserver1.inventory.orders：ID
oracle.provide.transaction.metadata.displayName=将事务元数据信息存储在专用主题中。
oracle.provide.transaction.metadata.description=使事务元数据提取与事件计数一起
oracle.sanitize.field.names.displayName=是否清洗
oracle.sanitize.field.names.description=字段名称是否会对Avro命名约定消毒
oracle.skipped.operations.displayName=跳过操作
oracle.skipped.operations.description=在流期间跳过逗号分隔的操作列表，定义为：'c'，用于插入/创建;'U'更新;'d'删除。默认情况下，不会跳过任何操作。
oracle.event.processing.failure.handling.mode.displayName=事件反序列化故障处理
oracle.event.processing.failure.handling.mode.description=指定应处理事件期间的故障（即遇到损坏的事件时），包括：'fail'（默认值）表示有问题事件的异常，并提出其位置，导致连接器停止;“警告”问题事件及其立场将被记录，并且将跳过事件;'忽略'将跳过问题事件。
oracle.max.queue.size.displayName=更改事件缓冲区大小
oracle.max.queue.size.description=更改事件的最大大小从数据库日志读取但尚未录制或转发。默认值为8192，应始终大于最大批次大小。
oracle.poll.interval.ms.displayName=轮询间隔（MS）
oracle.poll.interval.ms.description=在没有以毫秒为单位的情况下接收到没有事件后，要查看新更改事件的时间。默认为500毫秒。
oracle.source.struct.version.displayName=源结构制造商版本
oracle.source.struct.version.description=消息中公开可见源部件格式的版本
oracle.value.converter.displayName=值转换器
oracle.value.converter.description=值转换器
oracle.value.converter.schemas.enable.displayName=Schema生成(值)
oracle.value.converter.schemas.enable.description=Schema生成(值)
oracle.key.converter.displayName=键转换器
oracle.key.converter.description=键转换器
oracle.key.converter.schemas.enable.displayName=Schema生成(键)
oracle.key.converter.schemas.enable.description=key.converter.schemas.Enable.
oracle.datasource.id.displayName=数据源ID
oracle.datasource.id.description=数据源ID
oracle.datasource.name.displayName=数据源名称
oracle.datasource.name.description=数据源名称
oracle.tasks.max.displayName=任务数
oracle.tasks.max.description=任务数
oracle.topic.creation.default.replication.factor.displayName=副本数量
oracle.topic.creation.default.replication.factor.description=副本数量
oracle.topic.creation.default.partitions.displayName=分区数
oracle.topic.creation.default.partitions.description=分区数
oracle.topic.creation.default.cleanup.policy.displayName=删除策略
oracle.topic.creation.default.cleanup.policy.description=删除策略
oracle.topic.creation.default.compression.type.displayName=压缩方式
oracle.topic.creation.default.compression.type.description=压缩方式
oracle.topic.creation.default.retention.ms.displayName=保留时间
oracle.topic.creation.default.retention.ms.description=保留时间

#######   mysql
mysql.database.server.name.displayName=命名标识
mysql.database.server.name.description=唯一名称标识
mysql.database.server.id.displayName=客户端标识ID
mysql.database.server.id.description=此数据库客户端的数字标识ID，在集群中的所有当前正在运行的数据库进程中必须是唯一的。此连接器将MySQL数据库群集添加为另一个服务器（具有此唯一ID），因此它可以读取Binlog。默认情况下，在5400和6400之间生成随机数。
mysql.database.history.kafka.bootstrap.servers.displayName=Kafka bootstrap地址
mysql.database.history.kafka.bootstrap.servers.description=连接器的主机/端口对列表用于建立与Kafka集群的初始连接，以检索先前由连接器存储的数据库模式历史记录。这应该指向Kafka Connect过程使用的相同Kafka集群。
mysql.database.history.kafka.topic.displayName=数据库历史主题名称
mysql.database.history.kafka.topic.description=数据库架构历史记录的主题的名称
mysql.database.server.id.offset.displayName=群集ID偏移量
mysql.database.server.id.offset.description=群集ID偏移量
mysql.connect.timeout.ms.displayName=连接超时（MS）
mysql.connect.timeout.ms.description=超时默认30000毫秒
mysql.connect.keep.alive.displayName=保持连接活动（真/假）
mysql.connect.keep.alive.description=是否应使用单独的线程来确保连接保持活力。
mysql.connect.keep.alive.interval.ms.displayName=保持活动间隔（MS）
mysql.connect.keep.alive.interval.ms.description=连接检查是否使用保持存在线程的时间间隔，以毫秒为单位为1分钟（60,000毫秒）。
mysql.database.initial.statements.displayName=Statement初始化
mysql.database.initial.statements.description=建立与数据库的JDBC连接（不是Binlog读取连接）时要执行的分号分隔列表。请注意，连接器可以以自己的自行决定建立JDBC连接，因此这通常仅用于配置会话参数，但不用于执行DML语句。使用双分号（';;'）使用分号作为字符而不是分隔符。
mysql.database.include.list.displayName=包括数据库
mysql.database.include.list.description=要捕获更改的数据库
mysql.database.exclude.list.displayName=排除数据库
mysql.database.exclude.list.description=逗号分隔的正则表达式列表，这些正则表达式匹配要从监控中排除的数据库名称
mysql.table.include.list.displayName=包括表格
mysql.table.include.list.description=要捕获更改的表
mysql.table.exclude.list.displayName=排除表格
mysql.table.exclude.list.description=逗号分隔的正则表达式列表，与要排除在监控之外的完全限定的表格名称
mysql.column.include.list.displayName=包括列
mysql.column.include.list.description=匹配列的正则表达式包含在更改事件中
mysql.column.exclude.list.displayName=排除列
mysql.column.exclude.list.description=正则表达式匹配列以从更改事件中排除
mysql.table.ignore.builtin.displayName=忽略系统数据库
mysql.table.ignore.builtin.description=指定是否应忽略内置表格的标志。
mysql.snapshot.mode.displayName=快照模式
mysql.snapshot.mode.description=取数模式
mysql.snapshot.locking.mode.displayName=全局读锁长度
mysql.snapshot.locking.mode.description=默认为minimal最小
mysql.snapshot.new.tables.displayName=自动添加任何新表
mysql.snapshot.new.tables.description=默认为off关
mysql.snapshot.fetch.size.displayName=快照获取大小
mysql.snapshot.fetch.size.description=在执行快照时应加载到内存中的最大记录数
mysql.snapshot.delay.ms.displayName=快照延迟（毫秒）
mysql.snapshot.delay.ms.description=默认为0毫秒
mysql.snapshot.select.statement.overrides.displayName=应覆盖快照期间使用的默认选择语句的表列表。
mysql.snapshot.select.statement.overrides.description=此属性包含逗号分隔的完全限定表（db_name.table_name）或（schema_name.table_name），具体取决于表示的连接器。选择各个表的语句是由ID'Snapshot.Select.statement.stative.stative.stative.stative.statement.statement.stative.stative.stative.stative.stative.stative.stative.stative.stative.stative.statement. [db_name]'或'snapshot.select.statement.overrides。[schema_name]。[table_name]'分别。这些属性的值是在快照期间从特定表中检索数据时要使用的SELECT语句。仅用于大附加表的可能使用情况正在设置一个特定点，在其中开始（恢复）快照，以防先前的快照被中断。
mysql.event.deserialization.failure.handling.mode.displayName=事件反序列化故障处理
mysql.event.deserialization.failure.handling.mode.description=指定应该处理Binlog事件（即遇到损坏的事件时）的失败的故障，包括：'FAIL'（默认值）表示有问题事件的异常，并提出了其Binlog位置，导致连接器停止;“警告”问题事件及其Binlog位置将被记录，并且将跳过事件;'忽略'将跳过问题事件。
mysql.enable.time.adjuster.displayName=启用时间调整器
mysql.enable.time.adjuster.description=MySQL允许用户将年份值插入2位数或4位数。在两个数字的情况下，该值将自动映射到1970  -  2069.false  - 将隐式转换委托给databasetrue  - （默认）脱款率使得转换
mysql.gtid.source.filter.dml.events.displayName=过滤DML事件
mysql.gtid.source.filter.dml.events.description=如果设置为true，我们将仅生成DML事件，以便在MySQL服务器上写入的事务，其中包含uuIds与由gtid.source.includes或gtid.source.excludes配置选项匹配的uuIds，如果指定了配置选项。
mysql.gtid.source.includes.displayName=包括GTID源
mysql.gtid.source.includes.description=在确定MySQL Server的Binlog中的起始位置时，源UUID用于包括GTID范围。
mysql.gtid.source.excludes.displayName=排除GTID源
mysql.gtid.source.excludes.description=在确定MySQL Server的Binlog中的起始位置时，源UUID用于排除GTID范围。
mysql.tombstones.on.delete.displayName=是否删除事件信息
mysql.tombstones.on.delete.description=删除操作是否应由删除事件和子查询到事件（true）表示或仅由删除事件（false）表示。发出墓碑事件（默认行为）允许Kafka完全删除源记录删除后删除与给定键相关的所有事件。
mysql.decimal.handling.mode.displayName=Decimal精度控制模式
mysql.decimal.handling.mode.description=精度
mysql.time.precision.mode.displayName=时间戳
mysql.time.precision.mode.description=时间，日期和时间戳可以用不同类型的精度表示，包括：'Adaptive_time_microseconds'：日期和时间戳值的精度是基于数据库列的精度;但是时间字段总是使用微秒精度;'connect'：始终表示使用Kafka Connect的内置表示的时间，日期和时间戳的时间，日期和时间戳值，无论数据库列的精度如何，它使用毫秒精度。
mysql.binary.handling.mode.displayName=二进制处理
mysql.binary.handling.mode.description=指定如何在更改事件中表示二进制（BLOB，二进制等）列，包括：'字节'表示二进制数据，作为字节数组（默认）'base64'表示二进制数据，因为base64编码的字符串'hex'表示二进制数据作为十六进制编码（Base16）字符串
mysql.bigint.unsigned.handling.mode.displayName=BIGINT无符号处理
mysql.bigint.unsigned.handling.mode.description=指定在更改事件中应表示Bigint无符号列，包括：'precise'使用java.math.bigdecimal表示使用二进制表示和Kafka Connect的'org.apache.kafka.connect在更改事件中编码值.Connect。data.decimal'类型;'long'（默认值）表示使用Java的“LONG”的值，这可能无法提供精度，但在消费者中使用的更容易。
mysql.heartbeat.interval.ms.displayName=连接器心跳间隔（毫秒）
mysql.heartbeat.interval.ms.description=默认为0禁用
mysql.heartbeat.topics.prefix.displayName=心跳命名前缀
mysql.heartbeat.topics.prefix.description=默认为__debezium-heartbeat
mysql.include.schema.changes.displayName=包括数据库架构更改
mysql.include.schema.changes.description=连接器是否应将数据库架构的更改发布到Kafka主题，以与数据库服务器ID相同的名称。每个模式更改都将使用包含数据库名称的键进行录制，并且其值包括新架构的逻辑描述和可选的DDL语句。默认值为“true”。这与连接器内部如何记录数据库历史记录。
mysql.include.query.displayName=在更改事件中包含原始SQL查询
mysql.include.query.description=连接器是否应包括生成更改事件的原始SQL查询。注意：此选项需要使用Binlog_Rows_Query_Log_Events选项配置MySQL。从快照生成的事件不会出现查询。警告：启用此选项可能会通过在更改事件中包含原始SQL语句，公开表明或屏蔽的表或字段。因此，默认值为“false”。
mysql.database.history.displayName=数据库历史级别
mysql.database.history.description=应该用于存储和恢复数据库架构更改的数据库History类的名称。历史记录的配置属性与“database.history”前缀。
mysql.min.row.count.to.stream.results.displayName=结果集大小
mysql.min.row.count.to.stream.results.description=表的行数必须包含流程结果，而不是在快照期间将全部拉入内存。默认为1,000。使用0流式流所有结果，并完全避免检查每个表的大小。
mysql.binlog.buffer.size.displayName=Binlog Reader缓冲区大小
mysql.binlog.buffer.size.description=Binlog Reader使用的展望缓冲区的大小来决定正在进行的事务是否会被提交或回滚。使用0来禁用远程缓冲。默认为0（即禁用缓冲）。
mysql.column.truncate.to.(d+).chars.displayName=截断列到n个字符
mysql.column.truncate.to.(d+).chars.description=将符合应截断的列的完全限定列名称的逗号分隔的正则表达式列表。
mysql.column.mask.with.(d+).chars.displayName=掩码列与n个星号
mysql.column.mask.with.(d+).chars.description=逗号分隔的正则表达式列表，匹配应以配置的星号（'*'）字符的已配置量屏蔽的完全限定列的全文名称。
mysql.column.mask.hash.([^.]+).with.salt.(.+).displayName=哈希模型
mysql.column.mask.hash.([^.]+).with.salt.(.+).description=逗号分隔的正则表达式列表，匹配应通过散列输入屏蔽的完全限定列的全文名称。使用指定的哈希算法和盐。
mysql.message.key.columns.displayName=列PK映射
mysql.message.key.columns.description=分号分隔的表达式列表，匹配完全限定的表和列用作消息键。每个表达式必须匹配模式'<完全限定表名称>：<key列>'，其中表名称可以定义为（db_name.table_name）或（schema_name.table_name），具体取决于特定的连接器和密钥列是表示自定义密钥的逗号分隔列列表。对于没有显式密钥配置的任何表，表的主键列将用作消息键.Example：dbserver1.inventory.OrderLines：OrderID，OrderLineId; dbserver1.inventory.orders：ID
mysql.database.history.kafka.recovery.attempts.displayName=最大尝试恢复次数
mysql.database.history.kafka.recovery.attempts.description=没有返回数据行的尝试次数
mysql.database.history.kafka.recovery.poll.interval.ms.displayName=恢复期间轮询间隔（ms)
mysql.database.history.kafka.recovery.poll.interval.ms.description=在恢复期间调用持久数据的轮询时等待毫秒的数量。
mysql.skipped.operations.displayName=跳过操作
mysql.skipped.operations.description=在流期间跳过逗号分隔的操作列表，定义为：'c'，用于插入/创建;'U'更新;'d'删除。默认情况下，不会跳过任何操作。
mysql.event.processing.failure.handling.mode.displayName=事件反序列化故障处理
mysql.event.processing.failure.handling.mode.description=指定应处理事件期间的故障（即遇到损坏的事件时），包括：'fail'（默认值）表示有问题事件的异常，并提出其位置，导致连接器停止;“警告”问题事件及其立场将被记录，并且将跳过事件;'忽略'将跳过问题事件。
mysql.inconsistent.schema.handling.mode.displayName=不一致的架构故障处理
mysql.inconsistent.schema.handling.mode.description=指定应处理属于从内部模式表示（即内部表示的表中的表所缺少的Binlog事件（即，与数据库不一致），包括：'FAIL'（默认值）表示有问题的事件及其Binlog位置的异常，导致连接器停止;“警告”问题事件及其Binlog位置将被记录，并且将跳过事件;“跳过”问题事件将跳过。
mysql.max.batch.size.displayName=事件批量大小
mysql.max.batch.size.description=每批源记录的最大大小。默认为2048。
mysql.max.queue.size.displayName=事件缓冲区大小
mysql.max.queue.size.description=更改事件的最大大小从数据库日志读取但尚未录制或转发。默认值为8192，应始终大于最大批次大小。
mysql.poll.interval.ms.displayName=轮询间隔（MS）
mysql.poll.interval.ms.description=在没有以毫秒为单位的情况下接收到没有事件后，要查看新更改事件的时间。默认为500毫秒。
mysql.source.struct.version.displayName=源结构制造商版本
mysql.source.struct.version.description=消息中公开可见源部件格式的版本
mysql.value.converter.displayName=值转换器
mysql.value.converter.description=值转换器
mysql.value.converter.schemas.enable.displayName=Schema生成(值)
mysql.value.converter.schemas.enable.description=Schema生成(值)
mysql.key.converter.displayName=键转换器
mysql.key.converter.description=键转换器
mysql.key.converter.schemas.enable.displayName=Schema生成(键)
mysql.key.converter.schemas.enable.description=key.converter.schemas.Enable.
mysql.datasource.id.displayName=数据源ID
mysql.datasource.id.description=数据源ID
mysql.datasource.name.displayName=数据源名称
mysql.datasource.name.description=数据源名称
mysql.tasks.max.displayName=任务数
mysql.tasks.max.description=任务数
mysql.topic.creation.default.replication.factor.displayName=副本数量
mysql.topic.creation.default.replication.factor.description=副本数量
mysql.topic.creation.default.partitions.displayName=分区数
mysql.topic.creation.default.partitions.description=分区数
mysql.topic.creation.default.cleanup.policy.displayName=删除策略
mysql.topic.creation.default.cleanup.policy.description=删除策略
mysql.topic.creation.default.compression.type.displayName=压缩方式
mysql.topic.creation.default.compression.type.description=压缩方式
mysql.topic.creation.default.retention.ms.displayName=保留时间
mysql.topic.creation.default.retention.ms.description=保留时间

########  postgres
postgres.database.server.name.displayName=命名标识
postgres.database.server.name.description=唯一名称标识
postgres.database.sslcert.displayName=SSL客户端证书
postgres.database.sslcert.description=包含客户端的SSL证书的文件。有关详细信息，请参阅Postgres SSL文档
postgres.database.sslpassword.displayName=SSL客户端密码密码
postgres.database.sslpassword.description=密码从“database.slkey”指定的文件中访问客户端私钥。有关详细信息，请参阅Postgres SSL文档
postgres.database.sslrootcert.displayName=SSL根证书
postgres.database.sslrootcert.description=包含验证服务器的根证书的文件。有关详细信息，请参阅Postgres JDBC SSL文档
postgres.database.sslkey.displayName=SSL客户端密钥
postgres.database.sslkey.description=包含客户端的SSL私钥的文件。有关详细信息，请参阅Postgres SSL文档
postgres.database.sslfactory.displayName=SSL根证书
postgres.database.sslfactory.description=为此创建SSL套接字的类名。使用org.postgresql.sl.nonvalidationFactory来禁用开发环境中的SSL验证
postgres.database.tcpKeepAlive.displayName=TCP保持活探针
postgres.database.tcpKeepAlive.description=启用或禁用TCP保持活动探针以避免丢弃TCP连接
postgres.database.initial.statements.displayName=Statement初始化
postgres.database.initial.statements.description=建立与数据库的JDBC连接时要执行的分号分隔的SQL语句列表。请注意，连接器可以自行决定建立JDBC连接，因此这通常应该仅用于配置参数的配置，但不应用于执行DML语句。使用双分号（';;'）使用分号作为字符而不是分隔符。
postgres.plugin.name.displayName=插件名称
postgres.plugin.name.description=安装在服务器上的Postgres逻辑解码插件的名称。支持的值是'DecoderBufs'，'wal2json'，'pgoutput'，'wal2json_streaming'，'wal2json_rds'和'wal2json_rds_streaming'。默认为'decoderbufs'。
postgres.slot.name.displayName=解码插槽名称
postgres.slot.name.description=用于从插件的流媒体更改为“debezium”的流媒体更改创建的postgres逻辑解码插槽的名称。
postgres.slot.stream.params.displayName=在启动流时传递给逻辑解码器的可选参数。
postgres.slot.stream.params.description=逻辑解码插件使用的任何可选参数。半冒号分开。例如。'add-tables = public.table，public.table2; include-lsn = true'
postgres.slot.drop.on.stop.displayName=丢弃槽
postgres.slot.drop.on.stop.description=当连接器完成逻辑复制槽时，无序地删除默认默认值，保留复制，以便在重新启动时可以从最后录制的位置恢复
postgres.slot.max.retries.displayName=重试计数
postgres.slot.max.retries.description=尝试失败时重试连接到复制插槽的次数。
postgres.slot.retry.delay.ms.displayName=重试延误
postgres.slot.retry.delay.ms.description=当连接器未能连接到复制插槽时，重试尝试之间的时间，以毫秒为单位。默认为10秒（10,000毫秒）。
postgres.status.update.interval.ms.displayName=状态更新间隔（MS）
postgres.status.update.interval.ms.description=将复制连接状态更新发送到服务器的频率，以毫秒为单位。默认为10秒（10,000毫秒）。
postgres.xmin.fetch.interval.ms.displayName=Xmin获取间隔（MS）
postgres.xmin.fetch.interval.ms.description=指定Xmin将从Replication Slot获取Xmin的频率。此XMIN值由插槽暴露，该插槽会产生下限，其中新复制插槽可以从其开始。值越低，此值越可能是当前的“真实”值，但性能成本越大。值越大，这个值的可能性越小就是当前的“真实”值，但性能损失越低。默认值设置为0 ms，禁用跟踪Xmin。
postgres.publication.name.displayName=出版物
postgres.publication.name.description=Postgres 10+发布的名称用于将更改从插件媒体更改为“dbz_publication”
postgres.publication.autocreate.mode.displayName=发布自动创建模式
postgres.publication.autocreate.mode.description=仅在使用pgOutput.determine创建出版物的创建应该工作时，默认为all_tables.disabled时才适用于all_tables.diable  - 连接器根本不会尝试创建发布。期望是用户已经创建了前面的出版物。如果在启动时找不到发布，则连接器将抛出异常和停止.All_tables  - 如果不存在出版物，则连接器将为所有表创建新的发布。请注意，这要求配置的用户可以访问。如果出版物已存在，则将使用它。I.E为所有表创建发布<publication_name>;过滤 - 如果不存在发布，则连接器将为所有与当前筛选器配置的表创建新的发布（参见表/数据库包含/排除列表属性）。如果出版物已存在，则将使用它。i.E为表<tbl1，tbl2等>创建发布<publication_name>
postgres.schema.include.list.displayName=包括模式
postgres.schema.include.list.description=应捕获事件的模式
postgres.schema.exclude.list.displayName=排除模式
postgres.schema.exclude.list.description=不得捕获事件的模式
postgres.table.include.list.displayName=包括表格
postgres.table.include.list.description=要捕获更改的表
postgres.table.exclude.list.displayName=排除表格
postgres.table.exclude.list.description=逗号分隔的正则表达式列表，与要排除在监控之外的完全限定的表格名称
postgres.column.include.list.displayName=包括列
postgres.column.include.list.description=匹配列的正则表达式包含在更改事件中
postgres.column.exclude.list.displayName=排除列
postgres.column.exclude.list.description=正则表达式匹配列以从更改事件中排除
postgres.table.ignore.builtin.displayName=忽略系统数据库
postgres.table.ignore.builtin.description=指定是否应忽略内置表格的标志。
postgres.snapshot.mode.displayName=快照模式
postgres.snapshot.mode.description=取数模式
postgres.snapshot.fetch.size.displayName=快照获取大小
postgres.snapshot.fetch.size.description=在执行快照时应加载到内存中的最大记录数
postgres.snapshot.delay.ms.displayName=快照延迟（毫秒）
postgres.snapshot.delay.ms.description=默认为0毫秒。
postgres.snapshot.lock.timeout.ms.displayName=快照锁定超时（MS）
postgres.snapshot.lock.timeout.ms.description=在快照开头时要等待表锁的最大数量。如果在此时间框架中无法获取锁，则将中止快照。默认为10秒钟
postgres.snapshot.select.statement.overrides.displayName=应覆盖快照期间使用的默认选择语句的表列表。
postgres.snapshot.select.statement.overrides.description=此属性包含逗号分隔的完全限定表（db_name.table_name）或（schema_name.table_name），具体取决于表示的连接器。选择各个表的语句是由ID'Snapshot.Select.statement.stative.stative.stative.stative.statement.statement.stative.stative.stative.stative.stative.stative.stative.stative.stative.stative.statement. [db_name]'或'snapshot.select.statement.overrides。[schema_name]。[table_name]'分别。这些属性的值是在快照期间从特定表中检索数据时要使用的SELECT语句。仅用于大附加表的可能使用情况正在设置一个特定点，在其中开始（恢复）快照，以防先前的快照被中断。
postgres.snapshot.custom.class.displayName=Snapshot模式自定义类
postgres.snapshot.custom.class.description=当“Snapshot.mode”设置为自定义时，必须将此设置设置为指定要加载的完全限定的类名（通过默认类加载器）.This类必须实现“Snaplotter”界面，并在每个应用启动上调用“Snaplotter”界面。确定是否执行快照以及如何构建查询。
postgres.tombstones.on.delete.displayName=是否删除事件信息
postgres.tombstones.on.delete.description=删除操作是否应由删除事件和子查询到事件（true）表示或仅由删除事件（false）表示。发出墓碑事件（默认行为）允许Kafka完全删除源记录删除后删除与给定键相关的所有事件。
postgres.decimal.handling.mode.displayName=Decimal精度控制模式
postgres.decimal.handling.mode.description=精度
postgres.time.precision.mode.displayName=时间戳
postgres.time.precision.mode.description=时间，日期和时间戳可以用不同类型的精度表示，包括：'自适应'（默认值）基于数据库列的精度上的时间，日期和时间戳值的精度;'Adaptive_time_microseconds'类似于'Adaptive'模式，但时间字段始终使用微秒精度;“连接”始终表示使用Kafka Connect的内置表示的时间，日期和时间戳值，这些时间表，日期和时间戳，无论如何使用毫秒精度使用毫秒精度数据库列的精度。
postgres.interval.handling.mode.displayName=间隔处理
postgres.interval.handling.mode.description=指定如何在更改事件中表示间隔列，包括：'String'表示作为精确的ISO格式字符串的值'numeric'（默认值）表示使用不精确转换成微秒的值
postgres.binary.handling.mode.displayName=二进制处理
postgres.binary.handling.mode.description=指定如何在更改事件中表示二进制（BLOB，二进制等）列，包括：'字节'表示二进制数据，作为字节数组（默认）'base64'表示二进制数据，因为base64编码的字符串'hex'表示二进制数据作为十六进制编码（Base16）字符串
postgres.hstore.handling.mode.displayName=hstore处理
postgres.hstore.handling.mode.description=指定HSTORE列应该如何在更改事件中表示，包括：“JSON”表示作为字符串IFIED JSON（默认）“映射”表示值的值表示作为键/值映射的值
postgres.heartbeat.interval.ms.displayName=连接器心跳间隔（毫秒）
postgres.heartbeat.interval.ms.description=默认为0禁用
postgres.heartbeat.topics.prefix.displayName=心跳命名前缀
postgres.heartbeat.topics.prefix.description=默认为__debezium-heartbeat
postgres.heartbeat.action.query.displayName=每个心跳执行可选查询
postgres.heartbeat.action.query.description=每个心跳执行的查询。
postgres.converters.displayName=转换器配置
postgres.converters.description=可选的自定义转换器列表，而不是默认的转换器。转换器使用“<converter.prefix> .type”配置选项定义，并使用选项'<converter.prefix>。<选项>'配置。
postgres.schema.refresh.mode.displayName=架构刷新模式
postgres.schema.refresh.mode.description=指定触发表中内存模式刷新的条件。'columns_diff'（默认值）是最安全模式，确保内存模式与数据库表的架构保持同步。“columns_diff_exclude_unchanged_toast”指示连接器刷新内存模式缓存，如果它与从传入消息派生之间存在差异，除非销售数据不变完全占差异。如果存在具有很少是这些更新的常用数据的常用数据，则此设置可以显着提高连接器性能。但是，如果从表中删除销售列，则可以对内存模式进行过时。
postgres.column.truncate.to.(d+).chars.displayName=截断列到n个字符
postgres.column.truncate.to.(d+).chars.description=将符合应截断的列的完全限定列名称的逗号分隔的正则表达式列表。
postgres.column.mask.with.(d+).chars.displayName=掩码列与n个星号
postgres.column.mask.with.(d+).chars.description=逗号分隔的正则表达式列表，匹配应以配置的星号（'*'）字符的已配置量屏蔽的完全限定列的全文名称。
postgres.column.mask.hash.([^.]+).with.salt.(.+).displayName=哈希模型
postgres.column.mask.hash.([^.]+).with.salt.(.+).description=逗号分隔的正则表达式列表，匹配应通过散列输入屏蔽的完全限定列的全文名称。使用指定的哈希算法和盐。
postgres.datatype.propagate.source.type.displayName=通过数据类型传播源类型
postgres.datatype.propagate.source.type.description=逗号分隔的正则表达式列表，与特定于数据库的数据类型名称匹配，该名称将数据类型的原始类型和原始长度添加为发射的更改记录中的相应字段模式。
postgres.column.propagate.source.type.displayName=按列传播源类型
postgres.column.propagate.source.type.description=逗号分隔的正则表达式列表匹配完全限定的列名称，该列将列的原始类型和原始长度添加为发射的更改记录中的相应字段模式。
postgres.message.key.columns.displayName=列PK映射
postgres.message.key.columns.description=分号分隔的表达式列表，匹配完全限定的表和列用作消息键。每个表达式必须匹配模式'<完全限定表名称>：<key列>'，其中表名称可以定义为（db_name.table_name）或（schema_name.table_name），具体取决于特定的连接器和密钥列是表示自定义密钥的逗号分隔列列表。对于没有显式密钥配置的任何表，表的主键列将用作消息键.Example：dbserver1.inventory.OrderLines：OrderID，OrderLineId; dbserver1.inventory.orders：ID
postgres.include.unknown.datatypes.displayName=包括未知数据类型
postgres.include.unknown.datatypes.description=指定是否应处理Debezium不支持的数据类型字段：'false'（默认值）省略字段;'true'将字段转换为实现相关二进制表示。
postgres.toasted.value.placeholder.displayName=占位符
postgres.toasted.value.placeholder.description=指定Debezium将提供的常量，以指示原始值是数据库未提供的烘焙值。如果从'hex：'前缀开始，则预计该字符串的其余部分是十六进制编码的八位字节。
postgres.provide.transaction.metadata.displayName=将事务元数据信息存储在专用主题中。
postgres.provide.transaction.metadata.description=使事务元数据提取与事件计数一起
postgres.sanitize.field.names.displayName=是否清洗
postgres.sanitize.field.names.description=字段名称是否会对Avro命名约定消毒
postgres.skipped.operations.displayName=跳过操作
postgres.skipped.operations.description=在流期间跳过逗号分隔的操作列表，定义为：'c'，用于插入/创建;'U'更新;'d'删除。默认情况下，不会跳过任何操作。
postgres.event.processing.failure.handling.mode.displayName=事件反序列化故障处理
postgres.event.processing.failure.handling.mode.description=指定应处理事件期间的故障（即遇到损坏的事件时），包括：'fail'（默认值）表示有问题事件的异常，并提出其位置，导致连接器停止;“警告”问题事件及其立场将被记录，并且将跳过事件;'忽略'将跳过问题事件。
postgres.max.batch.size.displayName=更改事件批量大小
postgres.max.batch.size.description=每批源记录的最大大小。默认为2048。
postgres.max.queue.size.displayName=更改事件缓冲区大小
postgres.max.queue.size.description=更改事件的最大大小从数据库日志读取但尚未录制或转发。默认值为8192，应始终大于最大批次大小。
postgres.poll.interval.ms.displayName=轮询间隔（MS）
postgres.poll.interval.ms.description=在没有以毫秒为单位的情况下接收到没有事件后，要查看新更改事件的时间。默认为500毫秒。
postgres.retriable.restart.connector.wait.ms.displayName=可解重启等待（MS）
postgres.retriable.restart.connector.wait.ms.description=在发生可回收异常后重新启动连接器之前等待的时间。默认为10000ms。
postgres.source.struct.version.displayName=源结构制造商版本
postgres.source.struct.version.description=消息中公开可见源部件格式的版本
postgres.value.converter.displayName=值转换器
postgres.value.converter.description=值转换器
postgres.value.converter.schemas.enable.displayName=Schema生成(值)
postgres.value.converter.schemas.enable.description=Schema生成(值)
postgres.key.converter.displayName=键转换器
postgres.key.converter.description=键转换器
postgres.key.converter.schemas.enable.displayName=Schema生成(键)
postgres.key.converter.schemas.enable.description=key.converter.schemas.Enable.
postgres.datasource.id.displayName=数据源ID
postgres.datasource.id.description=数据源ID
postgres.datasource.name.displayName=数据源名称
postgres.datasource.name.description=数据源名称
postgres.tasks.max.displayName=任务数
postgres.tasks.max.description=任务数
postgres.topic.creation.default.replication.factor.displayName=副本数量
postgres.topic.creation.default.replication.factor.description=副本数量
postgres.topic.creation.default.partitions.displayName=分区数
postgres.topic.creation.default.partitions.description=分区数
postgres.topic.creation.default.cleanup.policy.displayName=删除策略
postgres.topic.creation.default.cleanup.policy.description=删除策略
postgres.topic.creation.default.compression.type.displayName=压缩方式
postgres.topic.creation.default.compression.type.description=压缩方式
postgres.topic.creation.default.retention.ms.displayName=保留时间
postgres.topic.creation.default.retention.ms.description=保留时间